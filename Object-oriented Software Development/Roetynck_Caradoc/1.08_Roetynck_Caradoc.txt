Naam: Roetynck
Voornaam: Caradoc
Klas: G1.08

Vergeet niet je document te hernoemen! Volg de instructies uit de opgave!

Kopieer telkens de inhoud van de volledige klasse onder de correcte titellijn.

//----------------- Klasse Auto -----------------

package domein;

public class Auto
{
    private boolean elektrisch;
    private double aantalKilometers;
    private int vergoeding;

    private static final double DEFAULT_AANTAL_KILOMETERS = 400.50;
    private static final int    DEFAULT_VERGOEDING = 2;
    private static final boolean DEFAULT_ELEKTRISCH = true;
    private static final int MIN_VERGOEDING = 0;
    private static final int MAX_VERGOEDING = 5;
    private static final int MIN_AANTAL_KILOMETERS = 0;
    private static final int MAX_AANTAL_KILOMETERS = 1000;
    
    
    
    
	public Auto(boolean elektrisch, double aantalKilometers, int vergoeding)
	{
		setElektrisch(elektrisch);
        setAantalKilometers(aantalKilometers);
        setVergoeding(vergoeding);
	}

    public Auto(double aantalKilometers, int vergoeding) {
        this(DEFAULT_ELEKTRISCH, aantalKilometers, vergoeding);
    }

    public Auto(int vergoeding) {
        this(DEFAULT_ELEKTRISCH, DEFAULT_AANTAL_KILOMETERS, vergoeding);
    }

	public boolean isElektrisch()
	{
		return elektrisch;
	}
	public double getAantalKilometers()
	{
		return aantalKilometers;
	}
	public int getVergoeding()
	{
		return vergoeding;
	}
	public void setAantalKilometers(double aantalKilometers)
	{
		this.aantalKilometers = (aantalKilometers >= MIN_AANTAL_KILOMETERS && aantalKilometers <= MAX_AANTAL_KILOMETERS)?aantalKilometers:DEFAULT_AANTAL_KILOMETERS;
	}
	public void setVergoeding(int vergoeding)
	{
		this.vergoeding = (vergoeding > MIN_VERGOEDING && vergoeding <= MAX_VERGOEDING)?vergoeding:DEFAULT_VERGOEDING;
	}

    public boolean heeftExtraVergoeding() {
        return (isElektrisch()?(aantalKilometers <= DEFAULT_AANTAL_KILOMETERS)?true:false:false);
    }

    public double berekenTotaleVergoeding() {
        double totaleVergoeding = (MAX_AANTAL_KILOMETERS - aantalKilometers) * vergoeding;
        return (heeftExtraVergoeding())?(2*totaleVergoeding):totaleVergoeding;
    }

    private void setElektrisch(boolean elektrisch) {
        this.elektrisch = elektrisch;
    }
    
    
}


//----------------- Klasse AutoApplicatie -------



package cui;

import java.util.Scanner;

import domein.Auto;

public class AutoApplicatie {
    public static void main(String[] args) {
        new AutoApplicatie().start();
    }

    private Scanner sc = new Scanner(System.in);
    private static final int KEUZE1 = 1;
    private static final int KEUZE2 = 2;

    private void start() {

        Auto auto;
        double gem = 0;
        int aantalAutos = 0;
        boolean isAuto = false;
        double totVergoeding = 0;
        int aantalAutosMetVergoeding = 0;

        int keuze = geefKeuze();
        while (keuze != -1) {

            isAuto = true;

            switch (keuze) {
                case KEUZE1 -> {
                    auto = new Auto(false, geefAantalKilometers(), 1);
                }
                case KEUZE2 -> {
                    auto = new Auto(geefAantalKilometers(), geefVergoeding());
                }
                default -> {
                    auto = new Auto(geefVergoeding());
                }

            }
            if (auto.heeftExtraVergoeding())
                aantalAutosMetVergoeding++;

            totVergoeding += auto.berekenTotaleVergoeding();

            aantalAutos++;
            keuze = geefKeuze();
        }

        if (isAuto) {
            gem = totVergoeding / aantalAutos;
            System.out.printf("Er %s %d auto%s waar je recht hebt op extra vergoeding%n",
                    (aantalAutosMetVergoeding > 1) ? "zijn" : "is",
                    aantalAutosMetVergoeding,
                    (aantalAutosMetVergoeding > 1) ? "'s" : "");

            System.out.printf("Gemiddelde totale vergoeding is %.2f%n", gem);

        } else {
            System.out.println("Geen auto's ingegeven");
        }
    }

    private int geefVergoeding() {
        System.out.print("Geef vergoeding: ");
        return sc.nextInt();
    }

    private double geefAantalKilometers() {
        System.out.print("Geef aantal kilometers: ");
        return sc.nextDouble();
    }

    private int geefKeuze() {
        int keuze;
        boolean geldig;

        do {
            System.out.println("1: niet elektrische auto");
            System.out.println("2: elektrische auto met aantal kilometers en vergoeding");
            System.out.println("3: elektrische auto met vergoeding");
            System.out.println("-1: stoppen");
            keuze = sc.nextInt();
            geldig = keuze >= -1 && keuze <= 3 && keuze != 0;
        } while (!geldig);

        return keuze;
    }
}
